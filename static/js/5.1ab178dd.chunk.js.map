{"version":3,"sources":["components/Price.tsx","reducers/cart/actions.ts","components/BookImage.tsx","reducers/books/crud.ts","reducers/books/actions.ts","reducers/books/hooks.ts","reducers/orders/crud.ts","reducers/orders/actions.ts","reducers/orders/hooks.ts","components/BookPrice.tsx","reducers/cart/hooks.ts","components/Cart/CartHeader.tsx","components/Cart/CartItemQuantity.tsx","components/Cart/CartItemMobile.tsx","components/Cart/CartItemDesktop.tsx","components/Cart/CartItemList.tsx","components/Cart/CartButton.tsx","components/Cart/CartTotals.tsx","components/Cart/Cart.tsx","components/HomePage/Book.tsx","pages/HomePage.tsx"],"names":["React","memo","value","Math","floor","cartSetItems","items","type","ActionTypes","setItems","payload","cartAddItem","item","addItem","cartRemoveItem","removeItem","BookImage","title","src","style","maxWidth","maxHeight","boxShadow","alt","crud","getItems","createItems","updateItems","deleteItems","postBooks","putBooks","deleteBooks","setBooks","books","updateBooks","removeBooks","booksFetchStart","fetchStart","booksFetchEnd","errorMessage","fetchEnd","useGetBooks","forceFetch","useState","fetched","setFetched","dispatch","useDispatch","useSelector","state","loading","hasLoaded","useEffect","a","getBooks","length","initialBooks","console","log","message","useBookActions","me","useMe","addBooks","_books","apiBooksPost","map","id","apiBooksDelete","apiBooksPut","getOrders","postOrders","putOrders","getOrdersByUser","userId","allOrders","filter","o","buyer","setOrders","orders","addOrder","order","updateOrders","ordersFetchStart","ordersFetchEnd","apiGetOrdersByUser","apiPutOrders","useOrders","useOrderActions","history","useHistory","createOrder","cartItems","uuid","name","surname","username","status","orderStatuses","created","push","cancelOrder","canceled","dispatchOrder","dispatched","completeOrder","completed","updateOrder","useGetMyOrders","useGetOrdersByUserId","setFecthed","label","fontWeight","noWrap","variant","color","useAddCartItem","useCallback","handleCloseClick","display","justifyContent","IconButton","disabled","Typography","fontSize","marginTop","onClick","CartItemQuantity","quantity","handleDecrease","handleIncrease","border","borderRadius","width","size","CartItemMobile","key","padding","height","image","paddingLeft","flexDirection","paddingBottom","component","author","publishedDate","paddingTop","Price","price","ListItem","divider","paddingRight","flex","minWidth","marginLeft","CartItemList","CartItem","useMediaQuery","json2mq","CartItemDesktop","List","CartButton","handleClick","totalCount","Grid","container","justify","CircularProgress","Button","startIcon","CartTotals","totalPrice","Cart","openDrawer","setOpenDrawer","useRemoveCartItem","total","reduce","sum","handleCloseDrawer","Drawer","anchor","open","onClose","fullWidth","Book","book","xs","sm","md","flexGrow","BookPrice","HomePage","addOrInc","spacing"],"mappings":"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","file":"static/js/5.1ab178dd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Price = ({ value }: { value: number }) => (\n  <span>{`${Math.floor(value / 100)},${value % 100 < 10 ? `0${value % 100}` : value % 100} €`}</span>\n);\n\nexport default React.memo(Price);\n","import { ActionTypes, Item } from './types';\n\nexport const cartSetItems = (items: Item[]) => ({\n  type: ActionTypes.setItems,\n  payload: { items },\n});\n\nexport const cartAddItem = (item: Item) => ({\n  type: ActionTypes.addItem,\n  payload: { item },\n});\n\nexport const cartRemoveItem = (item: Item) => ({\n  type: ActionTypes.removeItem,\n  payload: { item },\n});\n","import React from 'react';\n\nconst BookImage = ({ title, src, style }: { title: string; src: string; style?: React.CSSProperties }) => (\n  <img\n    style={{ maxWidth: '100%', maxHeight: '100%', boxShadow: '1px 0px 3px grey', ...style }}\n    src={src}\n    alt={`${title}`}\n  />\n);\n\nexport default BookImage;\n","import { Book } from './types';\nimport { crud } from '../helpers/crud';\n\nconst { getItems, createItems, updateItems, deleteItems } = crud<Book>('books');\n\nexport { getItems as getBooks };\n\nexport const postBooks = createItems;\n\nexport const putBooks = updateItems;\n\nexport const deleteBooks = deleteItems;\n","import { ActionTypes, Book } from './types';\nimport { AppThunk } from '../store';\nimport { getBooks, putBooks, deleteBooks, postBooks } from './crud';\nimport { Me } from '../me/types';\n\nimport initialBooks from '../../_data/books.json';\n\nexport const setBooks = (books: Book[]) => ({\n  type: ActionTypes.setBooks,\n  payload: { books },\n});\n\nexport const addBooks = (books: Book[]) => ({\n  type: ActionTypes.addBooks,\n  payload: { books },\n});\n\nexport const updateBooks = (books: Book[]) => ({\n  type: ActionTypes.updateBooks,\n  payload: { books },\n});\n\nexport const removeBooks = (books: Book[]) => ({\n  type: ActionTypes.deleteBooks,\n  payload: { books },\n});\n\nexport const booksFetchStart = () => ({\n  type: ActionTypes.fetchStart,\n});\n\nexport const booksFetchEnd = (errorMessage?: string) => ({\n  type: ActionTypes.fetchEnd,\n  payload: { errorMessage },\n});\n\nexport const apiBooksGet = (): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const books = await getBooks();\n    if (books.length === 0) {\n      dispatch(setBooks(initialBooks as Book[]));\n      return dispatch(booksFetchEnd());\n    }\n    if (books.length > 0) {\n      dispatch(setBooks(books));\n      dispatch(booksFetchEnd());\n    }\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n\nexport const apiBooksPost = (books: Book[]): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const _books = await postBooks(books);\n    dispatch(setBooks(_books));\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n\nexport const apiBooksPut = (me: Me, books: Book[]): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const _books = await putBooks(books);\n    dispatch(updateBooks(_books));\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n\nexport const apiBooksDelete = (me: Me, books: Book[]): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const _books = await deleteBooks(books.map(({ id }) => id || ''));\n    dispatch(removeBooks(_books));\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootReducer } from '../rootReducer';\nimport { apiBooksGet, apiBooksDelete, apiBooksPost, apiBooksPut } from './actions';\nimport { Book } from './types';\nimport { useMe } from '../me/hooks';\n\nexport const useGetBooks = (forceFetch?: boolean) => {\n  const [fetched, setFetched] = useState(!forceFetch);\n  const dispatch = useDispatch();\n  const { books, loading, hasLoaded, errorMessage } = useSelector((state: RootReducer) => state.books);\n\n  useEffect(() => {\n    if ((!hasLoaded || !fetched) && !loading) {\n      setFetched(true);\n      dispatch(apiBooksGet());\n    }\n  }, [hasLoaded, loading, forceFetch, dispatch, fetched]);\n\n  return {\n    books,\n    loading,\n    hasLoaded,\n    errorMessage,\n  };\n};\n\nexport const useBookActions = () => {\n  const dispatch = useDispatch();\n  const { me } = useMe();\n  return {\n    addBooks: (books: Book[]) => dispatch(apiBooksPost(books)),\n    deleteBooks: (books: Book[]) => me && dispatch(apiBooksDelete(me, books)),\n    updateBooks: (books: Book[]) => me && dispatch(apiBooksPut(me, books)),\n  };\n};\n","import { Order } from './types';\nimport { crud } from '../helpers/crud';\n\nconst { getItems, createItems, updateItems } = crud<Order>('orders');\n\nexport const getOrders = getItems;\n\nexport const postOrders = createItems;\n\nexport const putOrders = updateItems;\n\nexport const getOrdersByUser = async (userId: string): Promise<Order[]> => {\n  const allOrders = await getOrders();\n  return allOrders.filter(o => o.buyer.id === userId);\n};\n","import { Order, ActionTypes } from './types';\nimport { AppThunk } from '../store';\nimport { postOrders, getOrdersByUser, putOrders } from './crud';\nimport { cartSetItems } from '../cart/actions';\n\nexport const setOrders = (orders: Order[]) => ({\n  type: ActionTypes.setOrders,\n  payload: { orders },\n});\n\nexport const addOrder = (order: Order) => ({\n  type: ActionTypes.addOrder,\n  payload: { order },\n});\n\nexport const updateOrders = (orders: Order[]) => ({\n  type: ActionTypes.updateOrders,\n  payload: { orders },\n});\n\nexport const ordersFetchStart = () => ({\n  type: ActionTypes.fetchStart,\n});\n\nexport const ordersFetchEnd = () => ({\n  type: ActionTypes.fetchEnd,\n});\n\nexport const apiGetOrdersByUser = (userId: string): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    const orders = await getOrdersByUser(userId);\n    dispatch(setOrders(orders));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n\nexport const apiOrderPost = (order: Order): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    const orders = await postOrders([order]);\n    dispatch(addOrder(orders[0]));\n    dispatch(cartSetItems([]));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n\nexport const apiPutOrders = (orders: Order[]): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    await putOrders(orders);\n    dispatch(updateOrders(orders));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { uuid } from 'uuidv4';\nimport { Item } from '../cart/types';\nimport { apiOrderPost, apiGetOrdersByUser, apiPutOrders } from './actions';\nimport { orderStatuses, Order } from './types';\nimport { useMe } from '../me/hooks';\nimport { RootReducer } from '../rootReducer';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const useOrders = () => {\n  return useSelector((state: RootReducer) => state.orders);\n};\n\nexport const useOrderActions = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { me } = useMe();\n\n  return {\n    createOrder: (cartItems: Item[]) => {\n      if (me && me.id) {\n        return dispatch(\n          apiOrderPost({\n            id: uuid(),\n            buyer: {\n              id: me.id,\n              name: me.name,\n              surname: me.surname,\n              username: me.username,\n            },\n            status: orderStatuses.created,\n            items: cartItems,\n          }),\n        );\n      }\n      return history.push('/login');\n    },\n    cancelOrder: (order: Order) => dispatch(apiPutOrders([{ ...order, status: orderStatuses.canceled }])),\n    dispatchOrder: (order: Order) => dispatch(apiPutOrders([{ ...order, status: orderStatuses.dispatched }])),\n    completeOrder: (order: Order) => dispatch(apiPutOrders([{ ...order, status: orderStatuses.completed }])),\n    updateOrder: (order: Order) => dispatch(apiPutOrders([order])),\n  };\n};\n\nexport const useGetMyOrders = () => {\n  const dispatch = useDispatch();\n  const me = useMe();\n  const orders = useSelector((state: RootReducer) => state.orders);\n\n  useEffect(() => {\n    if (!orders.hasLoaded && !orders.loading && me.me && me.me.id) {\n      dispatch(apiGetOrdersByUser(me.me.id));\n    }\n  });\n\n  return {\n    ...orders,\n    loading: me.loading || orders.loading,\n  };\n};\n\nexport const useGetOrdersByUserId = (userId: string) => {\n  const [fetched, setFecthed] = useState(false);\n  const dispatch = useDispatch();\n  const { orders, loading, hasLoaded } = useSelector((state: RootReducer) => state.orders);\n\n  useEffect(() => {\n    if (userId && !fetched && !loading) {\n      setFecthed(true);\n      dispatch(apiGetOrdersByUser(userId));\n    }\n  }, [userId, loading, dispatch, fetched]);\n\n  return {\n    orders,\n    loading,\n    hasLoaded,\n  };\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport Price from './Price';\n\nconst BookPrice = ({ value, label = 'Price: ' }: { value: number; label?: string }) => (\n  <Typography style={{ fontWeight: 700 }} noWrap variant=\"subtitle2\" color=\"primary\">\n    {label}\n    <Price value={value} />\n  </Typography>\n);\n\nexport default React.memo(BookPrice);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { RootReducer } from '../rootReducer';\nimport { useCallback } from 'react';\nimport { Item } from './types';\nimport { cartAddItem, cartRemoveItem } from './actions';\n\nexport const useGetCartItems = () => {\n  const cart = useSelector((state: RootReducer) => state.cartItems);\n\n  return cart;\n};\n\nexport const useAddCartItem = () => {\n  const dispatch = useDispatch();\n  const addItem = useCallback(\n    (item: Item) => {\n      dispatch(cartAddItem(item));\n    },\n    [dispatch],\n  );\n  return addItem;\n};\n\nexport const useRemoveCartItem = () => {\n  const dispatch = useDispatch();\n  const addItem = useCallback(\n    (item: Item) => {\n      dispatch(cartRemoveItem(item));\n    },\n    [dispatch],\n  );\n  return addItem;\n};\n","import React from 'react';\nimport { IconButton, Typography } from '@material-ui/core';\nimport ShoppingCartSharpIcon from '@material-ui/icons/ShoppingCartSharp';\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\n\nconst CartHeader = ({ handleCloseClick }: { handleCloseClick: Function }) => {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n      <IconButton disabled>\n        <ShoppingCartSharpIcon />\n      </IconButton>\n      <Typography style={{ fontSize: 24, marginTop: 10 }} variant=\"h4\">\n        Shopping Cart\n      </Typography>\n      <IconButton onClick={() => handleCloseClick()}>\n        <CloseSharpIcon />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default React.memo(CartHeader);\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst CartItemQuantity = ({\n  quantity,\n  handleDecrease,\n  handleIncrease,\n}: {\n  quantity: number;\n  handleDecrease: Function;\n  handleIncrease: Function;\n}) => (\n  <div style={{ display: 'flex' }}>\n    <div style={{ border: '1px solid gray', borderRadius: 15 }}>\n      <IconButton style={{ width: 30 }} size=\"small\" onClick={() => handleDecrease()}>\n        <RemoveIcon />\n      </IconButton>\n      {quantity}\n      <IconButton style={{ width: 30 }} size=\"small\" onClick={() => handleIncrease()}>\n        <AddIcon />\n      </IconButton>\n    </div>\n  </div>\n);\n\nexport default CartItemQuantity;\n","import React from 'react';\nimport { Item } from '../../reducers/cart/types';\nimport { Typography } from '@material-ui/core';\nimport Price from '../Price';\nimport CartItemQuantity from './CartItemQuantity';\nimport BookImage from '../BookImage';\n\nconst CartItemMobile = ({\n  item,\n  handleDecrease,\n  handleIncrease,\n}: {\n  item: Item;\n  handleDecrease: Function;\n  handleIncrease: Function;\n}) => {\n  return (\n    <div key={item.id} style={{ display: 'flex', padding: 10 }}>\n      <BookImage style={{ width: 100, height: 140 }} src={item.image} title={item.title} />\n      <div style={{ paddingLeft: 10, display: 'flex', flexDirection: 'column' }}>\n        <div style={{ paddingBottom: 10 }}>\n          <Typography style={{ fontSize: 14 }} component=\"h3\" variant=\"h3\">\n            {item.title}\n          </Typography>\n          <Typography style={{ fontSize: 12 }} noWrap variant=\"subtitle2\" color=\"textSecondary\">\n            {item.author}\n          </Typography>\n          <Typography style={{ fontSize: 12 }} noWrap variant=\"subtitle2\" color=\"textSecondary\">\n            {item.publishedDate}\n          </Typography>\n        </div>\n        <div style={{ marginTop: 'auto' }}>\n          <CartItemQuantity\n            quantity={item.quantity}\n            handleDecrease={() => handleDecrease(item)}\n            handleIncrease={() => handleIncrease(item)}\n          />\n          <div\n            style={{\n              paddingTop: 10,\n              fontSize: 16,\n            }}\n          >\n            Price: <Price value={item.quantity * item.price} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItemMobile;\n","import React from 'react';\nimport BookImage from '../BookImage';\nimport Price from '../Price';\nimport { Item } from '../../reducers/cart/types';\nimport { ListItem, Typography } from '@material-ui/core';\nimport CartItemQuantity from './CartItemQuantity';\n\nconst CartItem = ({\n  item,\n  handleDecrease,\n  handleIncrease,\n}: {\n  item: Item;\n  handleDecrease: Function;\n  handleIncrease: Function;\n}) => {\n  return (\n    <ListItem key={`${item.id}`} divider>\n      <BookImage src={item.image} title={item.title} style={{ width: 55, height: 75 }} />\n      <div style={{ paddingLeft: 10, paddingRight: 10 }}>\n        <div style={{ flex: 1, paddingLeft: 10 }}>\n          <Typography style={{ fontSize: 14, maxWidth: 140 }} component=\"h3\" variant=\"h3\">\n            {item.title}\n          </Typography>\n          <Typography style={{ fontSize: 12 }} noWrap variant=\"subtitle2\" color=\"textSecondary\">\n            {item.author}\n          </Typography>\n          <Typography style={{ fontSize: 12 }} noWrap variant=\"subtitle2\" color=\"textSecondary\">\n            {item.publishedDate}\n          </Typography>\n        </div>\n      </div>\n      <div style={{ minWidth: 70, marginLeft: 'auto' }}>\n        <CartItemQuantity\n          quantity={item.quantity}\n          handleDecrease={() => handleDecrease(item)}\n          handleIncrease={() => handleIncrease(item)}\n        />\n      </div>\n      <div\n        style={{\n          width: 70,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          fontWeight: 700,\n          fontSize: 16,\n        }}\n      >\n        <Price value={item.quantity * item.price} />\n      </div>\n    </ListItem>\n  );\n};\n\nexport default React.memo(CartItem);\n","import React from 'react';\nimport json2mq from 'json2mq';\nimport { useMediaQuery, List } from '@material-ui/core';\nimport { Item } from '../../reducers/cart/types';\nimport CartItemMobile from './CartItemMobile';\nimport CartItemDesktop from './CartItemDesktop';\n\nconst CartItemList = ({ items, addItem, removeItem }: { items: Item[]; addItem: Function; removeItem: Function }) => {\n  const renderMobileList = useMediaQuery(\n    json2mq({\n      maxWidth: 400,\n    }),\n  );\n\n  const CartItem = renderMobileList ? CartItemMobile : CartItemDesktop;\n\n  return (\n    <List>\n      {items.map(item => (\n        <CartItem key={item.id} item={item} handleDecrease={removeItem} handleIncrease={addItem} />\n      ))}\n    </List>\n  );\n};\n\nexport default CartItemList;\n","import React from 'react';\nimport { Grid, Button, CircularProgress } from '@material-ui/core';\nimport ShoppingCartSharpIcon from '@material-ui/icons/ShoppingCartSharp';\n\nconst CartButton = ({\n  loading,\n  disabled,\n  handleClick,\n  totalCount,\n}: {\n  loading: boolean;\n  disabled: boolean;\n  handleClick: Function;\n  totalCount: number;\n}) => {\n  return (\n    <Grid container justify=\"flex-end\">\n      {loading && <CircularProgress />}\n      <Button\n        startIcon={<ShoppingCartSharpIcon />}\n        disabled={disabled}\n        onClick={() => handleClick()}\n      >{`Cart: ${totalCount}`}</Button>\n    </Grid>\n  );\n};\n\nexport default CartButton;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport Price from '../Price';\n\nconst CartTotals = ({ totalPrice, totalCount }: { totalPrice: number; totalCount: number }) => {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', padding: 20 }}>\n      <div style={{ display: 'flex' }}>\n        <Typography variant=\"h5\">Total Items</Typography>\n        <Typography style={{ marginLeft: 'auto', fontSize: 20 }} variant=\"h5\">\n          {totalCount}\n        </Typography>\n      </div>\n      <div style={{ display: 'flex' }}>\n        <Typography variant=\"h5\">Total Price</Typography>\n        <Typography style={{ marginLeft: 'auto', fontSize: 20 }} variant=\"h5\">\n          <Price value={totalPrice} />\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default CartTotals;\n","import React, { useState, useCallback } from 'react';\n\nimport { Grid, Drawer, Button } from '@material-ui/core';\nimport { useOrders, useOrderActions } from '../../reducers/orders/hooks';\nimport CartHeader from './CartHeader';\nimport { useGetCartItems, useAddCartItem, useRemoveCartItem } from '../../reducers/cart/hooks';\nimport CartItemList from './CartItemList';\nimport CartButton from './CartButton';\nimport CartTotals from './CartTotals';\n\nconst Cart = () => {\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const { items } = useGetCartItems();\n  const addItem = useAddCartItem();\n  const removeItem = useRemoveCartItem();\n  const { loading } = useOrders();\n\n  const { createOrder } = useOrderActions();\n\n  const total = items.reduce((sum, { quantity }) => (sum += quantity), 0);\n  const totalPrice = items.reduce((sum, { price, quantity }) => (sum += price * quantity), 0);\n\n  const handleOpenDrawer = () => total > 0 && setOpenDrawer(true);\n  const handleCloseDrawer = useCallback(() => setOpenDrawer(false), []);\n  const handleCreateOrderClick = () => {\n    setOpenDrawer(false);\n    return createOrder(items);\n  };\n\n  return (\n    <>\n      <CartButton\n        loading={loading}\n        disabled={items.length === 0 || loading}\n        handleClick={handleOpenDrawer}\n        totalCount={total}\n      />\n      <Drawer anchor=\"right\" open={openDrawer} onClose={handleCloseDrawer}>\n        <CartHeader handleCloseClick={handleCloseDrawer} />\n        <CartItemList items={items} addItem={addItem} removeItem={removeItem} />\n        <CartTotals totalCount={total} totalPrice={totalPrice} />\n        <Grid style={{ padding: 20 }} container justify=\"space-between\">\n          <Button fullWidth onClick={handleCreateOrderClick} variant=\"contained\" color=\"primary\">\n            Create Order\n          </Button>\n        </Grid>\n      </Drawer>\n    </>\n  );\n};\n\nexport default Cart;\n","import React from 'react';\nimport { Typography, Button, Grid } from '@material-ui/core';\nimport { Book as BookType } from '../../reducers/books/types';\nimport BookImage from '../BookImage';\nimport BookPrice from '../BookPrice';\n\nconst Book = ({ book, handleClick }: { book: BookType; handleClick: Function }) => {\n  const { title, author, publishedDate, image, quantity, price } = book;\n  return (\n    <Grid style={{ display: 'flex', padding: 10 }} item xs={12} sm={6} md={4}>\n      <BookImage title={title} src={image} />\n      <div style={{ flexGrow: 1, display: 'flex', flexDirection: 'column', paddingLeft: 10 }}>\n        <div>\n          <Typography component=\"h6\" variant=\"h6\">\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\n            {author}\n          </Typography>\n          <Typography noWrap variant=\"subtitle2\" color=\"textSecondary\">\n            {publishedDate}\n          </Typography>\n          <Typography noWrap variant=\"subtitle2\" color=\"textSecondary\">\n            {`Quantity: ${quantity}`}\n          </Typography>\n          <BookPrice value={price} />\n        </div>\n        <div style={{ flex: 1, display: 'flex', flexDirection: 'column', justifyContent: 'flex-end' }}>\n          <Grid>\n            <Button variant=\"contained\" onClick={() => handleClick(book)} color=\"primary\">\n              Add to Cart\n            </Button>\n          </Grid>\n        </div>\n      </div>\n    </Grid>\n  );\n};\n\nexport default Book;\n","import React from 'react';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { useGetBooks } from '../reducers/books/hooks';\nimport { useAddCartItem } from '../reducers/cart/hooks';\nimport Cart from '../components/Cart/Cart';\nimport Book from '../components/HomePage/Book';\n\nconst HomePage = () => {\n  const { books, loading } = useGetBooks();\n  const addOrInc = useAddCartItem();\n  return (\n    <div>\n      {loading && <CircularProgress />}\n      {!loading && (\n        <Grid container spacing={5}>\n          <Cart />\n          {books.map(book => (\n            <Book key={book.id} book={book} handleClick={addOrInc} />\n          ))}\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}