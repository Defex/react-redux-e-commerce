{"version":3,"sources":["components/Price.tsx","reducers/cart/actions.ts","components/BookImage.tsx","reducers/orders/crud.ts","reducers/orders/actions.ts","reducers/orders/hooks.ts","components/BookPrice.tsx","components/MyOrders/OrderId.tsx","components/MyOrders/OrderInfoHeader.tsx","components/MyOrders/OrderInfo.tsx","components/MyOrders/OrderItems.tsx","components/MyOrders/MyOrder.tsx","pages/MyOrders.tsx"],"names":["React","memo","value","Math","floor","cartSetItems","items","type","ActionTypes","setItems","payload","cartAddItem","item","addItem","cartRemoveItem","removeItem","BookImage","title","src","style","maxWidth","maxHeight","boxShadow","alt","crud","getItems","createItems","updateItems","getOrders","postOrders","putOrders","getOrdersByUser","userId","a","allOrders","filter","o","buyer","id","setOrders","orders","addOrder","order","updateOrders","ordersFetchStart","fetchStart","ordersFetchEnd","fetchEnd","apiGetOrdersByUser","dispatch","console","log","apiPutOrders","useOrders","useSelector","state","useOrderActions","useDispatch","history","useHistory","me","useMe","createOrder","cartItems","uuid","name","surname","username","status","orderStatuses","created","push","cancelOrder","canceled","dispatchOrder","dispatched","completeOrder","completed","updateOrder","useGetMyOrders","useEffect","hasLoaded","loading","useGetOrdersByUserId","useState","fetched","setFecthed","label","fontWeight","noWrap","variant","color","OrderId","orderId","display","justifyContent","textTransform","OrderInfoHeader","fontStyle","borderBottom","flex","OrderInfo","createdAt","price","paddingTop","Price","parseInt","OrderItems","map","key","padding","width","height","image","paddingLeft","flexDirection","author","publishedDate","quantity","BookPrice","MyOrder","handleCancelClick","isAllowed","useAllowedActions","expand","setExpand","Paper","onClick","prev","margin","backgroundColor","cursor","Date","toISOString","split","reduce","sum","actions","cancelMyOrder","Button","MyOrders","handleCancelOrderClick","placeContent","CircularProgress","Backdrop","open"],"mappings":"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","file":"static/js/7.afa51a60.chunk.js","sourcesContent":["import React from 'react';\n\nconst Price = ({ value }: { value: number }) => (\n  <span>{`${Math.floor(value / 100)},${value % 100 < 10 ? `0${value % 100}` : value % 100} â‚¬`}</span>\n);\n\nexport default React.memo(Price);\n","import { ActionTypes, Item } from './types';\n\nexport const cartSetItems = (items: Item[]) => ({\n  type: ActionTypes.setItems,\n  payload: { items },\n});\n\nexport const cartAddItem = (item: Item) => ({\n  type: ActionTypes.addItem,\n  payload: { item },\n});\n\nexport const cartRemoveItem = (item: Item) => ({\n  type: ActionTypes.removeItem,\n  payload: { item },\n});\n","import React from 'react';\n\nconst BookImage = ({ title, src, style }: { title: string; src: string; style?: React.CSSProperties }) => (\n  <img\n    style={{ maxWidth: '100%', maxHeight: '100%', boxShadow: '1px 0px 3px grey', ...style }}\n    src={src}\n    alt={`${title}`}\n  />\n);\n\nexport default BookImage;\n","import { Order } from './types';\nimport { crud } from '../helpers/crud';\n\nconst { getItems, createItems, updateItems } = crud<Order>('orders');\n\nexport const getOrders = getItems;\n\nexport const postOrders = createItems;\n\nexport const putOrders = updateItems;\n\nexport const getOrdersByUser = async (userId: string): Promise<Order[]> => {\n  const allOrders = await getOrders();\n  return allOrders.filter(o => o.buyer.id === userId);\n};\n","import { Order, ActionTypes } from './types';\nimport { AppThunk } from '../store';\nimport { postOrders, getOrdersByUser, putOrders } from './crud';\nimport { cartSetItems } from '../cart/actions';\n\nexport const setOrders = (orders: Order[]) => ({\n  type: ActionTypes.setOrders,\n  payload: { orders },\n});\n\nexport const addOrder = (order: Order) => ({\n  type: ActionTypes.addOrder,\n  payload: { order },\n});\n\nexport const updateOrders = (orders: Order[]) => ({\n  type: ActionTypes.updateOrders,\n  payload: { orders },\n});\n\nexport const ordersFetchStart = () => ({\n  type: ActionTypes.fetchStart,\n});\n\nexport const ordersFetchEnd = () => ({\n  type: ActionTypes.fetchEnd,\n});\n\nexport const apiGetOrdersByUser = (userId: string): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    const orders = await getOrdersByUser(userId);\n    dispatch(setOrders(orders));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n\nexport const apiOrderPost = (order: Order): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    const orders = await postOrders([order]);\n    dispatch(addOrder(orders[0]));\n    dispatch(cartSetItems([]));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n\nexport const apiPutOrders = (orders: Order[]): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    await putOrders(orders);\n    dispatch(updateOrders(orders));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { uuid } from 'uuidv4';\nimport { Item } from '../cart/types';\nimport { apiOrderPost, apiGetOrdersByUser, apiPutOrders } from './actions';\nimport { orderStatuses, Order } from './types';\nimport { useMe } from '../me/hooks';\nimport { RootReducer } from '../rootReducer';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const useOrders = () => {\n  return useSelector((state: RootReducer) => state.orders);\n};\n\nexport const useOrderActions = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { me } = useMe();\n\n  return {\n    createOrder: (cartItems: Item[]) => {\n      if (me && me.id) {\n        return dispatch(\n          apiOrderPost({\n            id: uuid(),\n            buyer: {\n              id: me.id,\n              name: me.name,\n              surname: me.surname,\n              username: me.username,\n            },\n            status: orderStatuses.created,\n            items: cartItems,\n          }),\n        );\n      }\n      return history.push('/login');\n    },\n    cancelOrder: (order: Order) => dispatch(apiPutOrders([{ ...order, status: orderStatuses.canceled }])),\n    dispatchOrder: (order: Order) => dispatch(apiPutOrders([{ ...order, status: orderStatuses.dispatched }])),\n    completeOrder: (order: Order) => dispatch(apiPutOrders([{ ...order, status: orderStatuses.completed }])),\n    updateOrder: (order: Order) => dispatch(apiPutOrders([order])),\n  };\n};\n\nexport const useGetMyOrders = () => {\n  const dispatch = useDispatch();\n  const me = useMe();\n  const orders = useSelector((state: RootReducer) => state.orders);\n\n  useEffect(() => {\n    if (!orders.hasLoaded && !orders.loading && me.me && me.me.id) {\n      dispatch(apiGetOrdersByUser(me.me.id));\n    }\n  });\n\n  return {\n    ...orders,\n    loading: me.loading || orders.loading,\n  };\n};\n\nexport const useGetOrdersByUserId = (userId: string) => {\n  const [fetched, setFecthed] = useState(false);\n  const dispatch = useDispatch();\n  const { orders, loading, hasLoaded } = useSelector((state: RootReducer) => state.orders);\n\n  useEffect(() => {\n    if (userId && !fetched && !loading) {\n      setFecthed(true);\n      dispatch(apiGetOrdersByUser(userId));\n    }\n  }, [userId, loading, dispatch, fetched]);\n\n  return {\n    orders,\n    loading,\n    hasLoaded,\n  };\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport Price from './Price';\n\nconst BookPrice = ({ value, label = 'Price: ' }: { value: number; label?: string }) => (\n  <Typography style={{ fontWeight: 700 }} noWrap variant=\"subtitle2\" color=\"primary\">\n    {label}\n    <Price value={value} />\n  </Typography>\n);\n\nexport default React.memo(BookPrice);\n","import React from 'react';\n\nconst OrderId = ({ orderId }: { orderId: string }) => (\n  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n    <div style={{ textTransform: 'uppercase', fontWeight: 700 }}>Order: </div>\n    <div>{orderId}</div>\n  </div>\n);\n\nexport default OrderId;\n","import React from 'react';\n\nconst OrderInfoHeader = () => (\n  <div\n    style={{\n      display: 'flex',\n      justifyContent: 'space-between',\n      fontStyle: 'italic',\n      borderBottom: '1px solid gray',\n    }}\n  >\n    <div style={{ textTransform: 'uppercase', flex: 1 }}>Created At</div>\n    <div style={{ textTransform: 'uppercase', flex: 1 }}>Status </div>\n    <div style={{ textTransform: 'uppercase', flex: 1, display: 'flex', justifyContent: 'flex-end' }}>Price</div>\n  </div>\n);\n\nexport default OrderInfoHeader;\n","import React from 'react';\nimport Price from '../Price';\n\nconst OrderInfo = ({ createdAt, status, price }: { createdAt: string; status: string; price: number }) => (\n  <div\n    style={{\n      display: 'flex',\n      justifyContent: 'space-between',\n      fontWeight: 600,\n      paddingTop: 4,\n    }}\n  >\n    <div style={{ textTransform: 'uppercase', flex: 1 }}>{createdAt} </div>\n    <div style={{ textTransform: 'uppercase', flex: 1 }}>{status} </div>\n    <div style={{ textTransform: 'uppercase', flex: 1, display: 'flex', justifyContent: 'flex-end' }}>\n      <Price value={parseInt(`${price}`)} />\n    </div>\n  </div>\n);\n\nexport default OrderInfo;\n","import React from 'react';\nimport { Item } from '../../reducers/cart/types';\nimport BookImage from '../BookImage';\nimport BookPrice from '../BookPrice';\n\nconst OrderItems = ({ items }: { items: Item[] }) => {\n  return (\n    <div style={{ paddingTop: 20 }}>\n      {items.map(item => (\n        <div key={item.id} style={{ display: 'flex', padding: '10px 0' }}>\n          <BookImage style={{ width: 100, height: 140 }} src={item.image} title={item.title} />\n          <div\n            style={{\n              paddingLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>\n              <div style={{ fontWeight: 700 }}>{item.title}</div>\n              <div style={{ paddingTop: 4, color: '#7A7878' }}>{item.author}</div>\n              <div style={{ color: '#7A7878' }}>{item.publishedDate}</div>\n            </div>\n            <div>\n              <div>Count: {item.quantity}</div>\n              <BookPrice value={item.price * item.quantity} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default OrderItems;\n","import React, { useState } from 'react';\nimport { Paper, Button } from '@material-ui/core';\nimport { Order } from '../../reducers/orders/types';\nimport OrderId from './OrderId';\nimport OrderInfoHeader from './OrderInfoHeader';\nimport OrderInfo from './OrderInfo';\nimport OrderItems from './OrderItems';\nimport { useAllowedActions } from '../../reducers/users/hooks';\nimport { actions } from '../../allowedActionsConfig';\n\nconst MyOrder = ({ order, handleCancelClick }: { order: Order; handleCancelClick: Function }) => {\n  const isAllowed = useAllowedActions();\n  const [expand, setExpand] = useState(false);\n  return (\n    <Paper\n      onClick={() => setExpand(prev => !prev)}\n      style={{ padding: 20, margin: '10px 0', backgroundColor: 'white', maxWidth: 500, cursor: 'pointer' }}\n    >\n      <OrderId orderId={order.id} />\n      <div style={{ paddingTop: 10 }}>\n        <OrderInfoHeader />\n        <OrderInfo\n          createdAt={`${new Date().toISOString().split('T')[0]}`}\n          status={`${order.status}`}\n          price={order.items.reduce((sum, { price, quantity }) => (sum += price * quantity), 0)}\n        />\n        {expand && <OrderItems items={order.items} />}\n        {isAllowed(order.status, actions.cancelMyOrder) && (\n          <div style={{ display: 'flex', justifyContent: 'flex-end', paddingTop: 10 }}>\n            <Button onClick={() => handleCancelClick(order)} color=\"secondary\">\n              Cancel Order\n            </Button>\n          </div>\n        )}\n      </div>\n    </Paper>\n  );\n};\n\nexport default MyOrder;\n","import React from 'react';\nimport { useGetMyOrders, useOrderActions } from '../reducers/orders/hooks';\nimport { CircularProgress, Backdrop } from '@material-ui/core';\nimport { Order } from '../reducers/orders/types';\nimport MyOrder from '../components/MyOrders/MyOrder';\n\nconst MyOrders = () => {\n  const { orders, loading, hasLoaded } = useGetMyOrders();\n  const { cancelOrder } = useOrderActions();\n\n  const handleCancelOrderClick = (order: Order) => cancelOrder(order);\n\n  return (\n    <div style={{ display: 'flex', placeContent: 'center' }}>\n      {loading && !hasLoaded && <CircularProgress />}\n      {loading && hasLoaded && (\n        <Backdrop open={!!loading}>\n          <CircularProgress />\n        </Backdrop>\n      )}\n      {!loading && (\n        <div>\n          {orders.map(o => (\n            <MyOrder key={o.id} order={o} handleCancelClick={handleCancelOrderClick} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyOrders;\n"],"sourceRoot":""}